services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.123.0
    volumes:
      - ./otel-collector-config.yml:/etc/otelcol-config.yml
    ports:
      - 1888:1888 # pprof extension
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    command: [ "--config=/etc/otelcol-config.yml" ]
    environment:
      EFTSURE_COLLECTOR_MEMORY_LIMIT_MIB: 512
      EFTSURE_ASPIRE_OTEL_ENDPOINT: "http://aspire-dashboard:18889"
    depends_on:
      aspire-dashboard:
        condition: service_started

  aspire-dashboard:
    image: mcr.microsoft.com/dotnet/aspire-dashboard:9.1
    ports:
      - 18888:18888 # Dashboard endpoint
      - 18889:18889 # OTEL endpoint
    environment:
      DOTNET_DASHBOARD_UNSECURED_ALLOW_ANONYMOUS: "true"
    tty: true

  postgres:
    image: postgres:16
    container_name: scorecard-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: scorecard
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  scorecard-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scorecard-api
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/scorecard
      NODE_ENV: development
      # OpenTelemetry configuration
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
      OTEL_RESOURCE_ATTRIBUTES: "deployment.environment.name=dev"
      OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      start_period: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      otel-collector:
        condition: service_started
    restart: unless-stopped
  
volumes:
  postgres-data: 